---
title: "Technical Interview"
subtitle: "Scientific Assistant Data Science"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

# Part 1

## Task 1

You are working on a paper about sanitation facilities and you are setting up a new directory structure for this project. 

1. Locate the "Files" manager in the RStudio IDE

2. Use the RStudio IDE graphical user interface (GUI) to create a new directory titled "sanitation-facilities"

3. Open the "sanitation-facilities" directory 

4. Inside this directory, use the RStudio IDE GUI to create a directory structure that stores:

- unprocessed raw data
- processed data
- code
- text

# Part 2

## Task 1

The collection of tidyverse R Packages is installed in your computing environment. 
1. Run the R code chunk below to execute the code and load the R Packages

```{r}

library(tidyverse)

```

## Task 1

The file at what-a-waste-city-level-data.csv contains a dataset on solid waste management from around the world. The dataset has 15 variables (columns) with one observation (row) for each city with reported data.

The first five variables are:

- The name of the city that reported data.
- The country where the city that reported data is located.
- The income category by the World Bank that is associated with the country.
- The population of each city.
- The municipal solid waste generation in tons per year

The following ten variables contain data on percentages of waste treated at different waste treatment technologies. 

1. Execute the R code in the R code chunk below
2. Inspect the R code and describe verbally, line by line, what the code does

```{r}

waste_city <- read_csv("what-a-waste-city-level-data.csv") |>
  mutate(income_id = factor(income_id, 
                            levels = c("HIC", "UMC", "LMC", "LIC")))

waste_city |> 
  group_by(income_id) |> 
  summarise(
    count = n()
  )

```

## Task 2

Use the `waste_city` object and write R code to answer the following questions: 

1. How many cities have reported data? 367

2. How many countries have reported data? 164

3. How many countries have reported data for five cities or more? 10


```{r}

waste_city |> 
  unique()

waste_city |> 
  count(country) 

waste_city |> 
  count(country) |> 
  filter(n >= 5) 


```

## Task 3

Use the `waste_city` object and write R code to complete the following task:

1. Add a new variable to the data, which contains the municipal solid waste_city generation for each city in kg per person per day.

2. Assign the created data set to a new object titled `waste_city_day`

```{r}


waste_city_day <- waste_city |> 
  mutate(msw_generation_person_kg_day = msw_generation_tons_year / pop / 365 * 1000)


```

## Task 4

Use the `waste_city` object and write R code to complete the following task:

1. Prepare a box plot with income category on the x-axis and municipal solid waste generation in tons per year on the y-axis. 

2. Describe the elements of the plot verbally

3. Transform the y-axis to a base 10 logarithmic scale

4. Rename the x- and y-axis labels

```{r}

ggplot(waste_city, aes(x = income_id,
                  y = msw_generation_tons_year)) +
  geom_boxplot() +
  scale_y_log10() +
  labs(x = "MSW generation (tons/year) log 10",
       y = "Income category") 

```

## Task 5

Write R code to solve the following tasks

1. Read what-a-waste-country-level-data.csv and drop rows containing any NAs, assgining the result to a new tibble (dataframe) called waste_country

2. Read gdp-data.csv and assign to a tibble (dataframe called gdp)

3. Use a left join to combine the waste_country and gdp tibbles using the ISO country code variable columns for matches

4. Prepare a scatterplot for GDP and municipal solid waste generation.

5. Describe how you could improve this plot.


```{r}

waste_country <- read_csv("what-a-waste-country-level-data.csv") |> 
  drop_na()

gdp <- read_csv("gdp-data.csv")

waste_gdp_joined <- waste_country |> 
  left_join(gdp)

ggplot(waste_gdp_joined,
       aes(x = gdp_capita_usd,
           y = msw_generation_tons_year)) +
  geom_point() +
  scale_x_log10()

```


